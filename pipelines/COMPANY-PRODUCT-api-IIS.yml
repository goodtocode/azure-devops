trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    include:
    - src/Core/*
    - src/Infrastructure/*
    - src/Specs/*
    - src/Presentation/*

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: CreateIis
    type: boolean
    default: false

variables:
  - template: ../variables/common.yml
  - name: ConnectionStrings.DefaultConnection
    value: '$(sqlConnection)'

stages:
  - stage: build
    jobs:    
      - job: build_api
        steps:
          - template: ../steps/dotnet-build-steps.yml
            parameters:
              dotnetVersion: '$(dotnetVersion)'
              srcPath: '$(srcPath)'
              srcProject: '$(apiProject)'

      - job: test_api
        dependsOn: build_api      
        steps:
          - template: ../steps/dotnet-test-steps.yml
            parameters:
              dotnetVersion: '$(dotnetVersion)'
              testPath: '$(unitPath)'
              testProject: '$(unitProject)'
              restorePath: '$(srcPath)'
              appcsEnvironmentVariable: '$(appcsEnvironmentVariable)'
              appcsConnection: '$(appcsConnection)'
              rgEnvironment: '$(rgEnvironment)'

      - job: package_api
        dependsOn: test_api
        steps:
          - template: ../steps/dotnet-publish-steps.yml
            parameters:
              artifactsPath: '$(artifactsPath)'
              artifactName: '$(artifactName)'
              dotnetVersion: '$(dotnetVersion)'
              restorePath: '$(srcPath)'
              scriptsPath: '$(scriptsPath)'
              srcPath: '$(apiPath)'
              srcProject: '$(apiProject)'

  - stage: deploy_dev
    dependsOn: build
    condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest')))
    variables:
      - template: ../variables/development.yml
      
    jobs:
      - deployment: DeployAPI
        environment:
          name: Development
          resourceName: VM-MICRO-DEV-03
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  displayName: Remove HTTPS Bindings 
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                      script: |
                        netsh http delete sslcert ipport=0.0.0.0:443
                        netsh http delete sslcert ipport=0.0.0.0:$(headlessPort)
                        setx ASPNETCORE_ENVIRONMENT $(rgEnvironment) /M

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: IIS Web App Create - $(siteDNS)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(siteDNS)'
                    WebsitePhysicalPath: '%SystemDrive%\sites\$(siteDNS)'
                    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                    AddBinding: true
                    Bindings: '{"bindings":[{"protocol":"https","ipAddress":"All Unassigned","port":"$(headlessPort)","hostname":"","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"https","ipAddress":"All Unassigned","port":"443","hostname":"$(siteDNS)","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"$(siteDNS)","sslThumbprint":"","sniFlag":false}]}'
                    CreateOrUpdateAppPoolForWebsite: true
                    ConfigureAuthenticationForWebsite: true
                    AnonymousAuthenticationForWebsite: true
                    WindowsAuthenticationForWebsite: false
                    AppPoolNameForWebsite: '$(siteDNS)'
                    DotNetVersionForWebsite: 'v4.0'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'SpecificUser'
                    AppPoolUsernameForWebsite: '$(netforumUser)'
                    AppPoolPasswordForWebsite: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  condition: ${{ parameters.CreateIis }}
                  continueOnError: true                  
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StopAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'                    

                - task: IISWebAppManagementOnMachineGroup@0                
                  displayName: IIS App Pool - $(siteDNS)\$(productName)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISWebApplication'
                    ParentWebsiteNameForApplication: '$(siteDNS)'
                    VirtualPathForApplication: '/$(productName)'
                    PhysicalPathForApplication: '%SystemDrive%\sites\$(siteDNS)\$(productName)'
                    CreateOrUpdateAppPoolForApplication: true
                    AppPoolNameForApplication: '$(siteDNS)-$(productName)'
                    DotNetVersionForApplication: 'v4.0'
                    PipeLineModeForApplication: 'Integrated'
                    AppPoolIdentityForApplication: 'SpecificUser'
                    AppPoolUsernameForApplication: '$(netforumUser)'
                    AppPoolPasswordForApplication: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StartAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'

                - task: FileTransform@1
                  displayName: 'Variable transformation'
                  inputs:
                    folderPath: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    fileType: 'json'
                    targetFiles: 'appsettings.$(rgEnvironment).json'

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: Deploy IIS Website/App - $(siteDNS)\$(productName)
                  inputs:
                    WebSiteName: '$(siteDNS)'
                    VirtualApplication: '$(productName)'
                    Package: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    TakeAppOfflineFlag: true

  - stage: deploy_qa
    dependsOn: deploy_dev
    condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest')))
    variables:
      - template: ../variables/qa.yml
      
    jobs:
      - deployment: DeployAPI
        environment:
          name: QA
          resourceName: VM-MICRO-QA-01
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  displayName: Remove HTTPS Bindings 
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                      script: |
                        netsh http delete sslcert ipport=0.0.0.0:443
                        netsh http delete sslcert ipport=0.0.0.0:$(headlessPort)
                        setx ASPNETCORE_ENVIRONMENT $(rgEnvironment) /M

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: IIS Web App Create - $(siteDNS)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(siteDNS)'
                    WebsitePhysicalPath: '%SystemDrive%\sites\$(siteDNS)'
                    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                    AddBinding: true
                    Bindings: '{"bindings":[{"protocol":"https","ipAddress":"All Unassigned","port":"$(headlessPort)","hostname":"","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"https","ipAddress":"All Unassigned","port":"443","hostname":"$(siteDNS)","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"$(siteDNS)","sslThumbprint":"","sniFlag":false}]}'
                    CreateOrUpdateAppPoolForWebsite: true
                    ConfigureAuthenticationForWebsite: true
                    AnonymousAuthenticationForWebsite: true
                    WindowsAuthenticationForWebsite: false
                    AppPoolNameForWebsite: '$(siteDNS)'
                    DotNetVersionForWebsite: 'v4.0'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'SpecificUser'
                    AppPoolUsernameForWebsite: '$(netforumUser)'
                    AppPoolPasswordForWebsite: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  condition: ${{ parameters.CreateIis }}
                  continueOnError: true                  
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StopAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'                    

                - task: IISWebAppManagementOnMachineGroup@0                
                  displayName: IIS App Pool - $(siteDNS)\$(productName)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISWebApplication'
                    ParentWebsiteNameForApplication: '$(siteDNS)'
                    VirtualPathForApplication: '/$(productName)'
                    PhysicalPathForApplication: '%SystemDrive%\sites\$(siteDNS)\$(productName)'
                    CreateOrUpdateAppPoolForApplication: true
                    AppPoolNameForApplication: '$(siteDNS)-$(productName)'
                    DotNetVersionForApplication: 'v4.0'
                    PipeLineModeForApplication: 'Integrated'
                    AppPoolIdentityForApplication: 'SpecificUser'
                    AppPoolUsernameForApplication: '$(netforumUser)'
                    AppPoolPasswordForApplication: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StartAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'

                - task: FileTransform@1
                  displayName: 'Variable transformation'
                  inputs:
                    folderPath: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    fileType: 'json'
                    targetFiles: 'appsettings.$(rgEnvironment).json'

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: Deploy IIS Website/App - $(siteDNS)\$(productName)
                  inputs:
                    WebSiteName: '$(siteDNS)'
                    VirtualApplication: '$(productName)'
                    Package: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    TakeAppOfflineFlag: true

  - stage: deploy_staging
    dependsOn: deploy_qa
    condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest')))
    variables:
      - template: ../variables/staging.yml
      
    jobs:
      - deployment: DeployAPI
        environment:
          name: Staging
          resourceName: VM-MICRO-STG-01
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  displayName: Remove HTTPS Bindings 
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                      script: |
                        netsh http delete sslcert ipport=0.0.0.0:443
                        netsh http delete sslcert ipport=0.0.0.0:$(headlessPort)
                        setx ASPNETCORE_ENVIRONMENT $(rgEnvironment) /M

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: IIS Web App Create - $(siteDNS)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(siteDNS)'
                    WebsitePhysicalPath: '%SystemDrive%\sites\$(siteDNS)'
                    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                    AddBinding: true
                    Bindings: '{"bindings":[{"protocol":"https","ipAddress":"All Unassigned","port":"$(headlessPort)","hostname":"","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"https","ipAddress":"All Unassigned","port":"443","hostname":"$(siteDNS)","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"$(siteDNS)","sslThumbprint":"","sniFlag":false}]}'
                    CreateOrUpdateAppPoolForWebsite: true
                    ConfigureAuthenticationForWebsite: true
                    AnonymousAuthenticationForWebsite: true
                    WindowsAuthenticationForWebsite: false
                    AppPoolNameForWebsite: '$(siteDNS)'
                    DotNetVersionForWebsite: 'v4.0'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'SpecificUser'
                    AppPoolUsernameForWebsite: '$(netforumUser)'
                    AppPoolPasswordForWebsite: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  condition: ${{ parameters.CreateIis }}
                  continueOnError: true                  
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StopAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'                    

                - task: IISWebAppManagementOnMachineGroup@0                
                  displayName: IIS App Pool - $(siteDNS)\$(productName)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISWebApplication'
                    ParentWebsiteNameForApplication: '$(siteDNS)'
                    VirtualPathForApplication: '/$(productName)'
                    PhysicalPathForApplication: '%SystemDrive%\sites\$(siteDNS)\$(productName)'
                    CreateOrUpdateAppPoolForApplication: true
                    AppPoolNameForApplication: '$(siteDNS)-$(productName)'
                    DotNetVersionForApplication: 'v4.0'
                    PipeLineModeForApplication: 'Integrated'
                    AppPoolIdentityForApplication: 'SpecificUser'
                    AppPoolUsernameForApplication: '$(netforumUser)'
                    AppPoolPasswordForApplication: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StartAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'

                - task: FileTransform@1
                  displayName: 'Variable transformation'
                  inputs:
                    folderPath: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    fileType: 'json'
                    targetFiles: 'appsettings.$(rgEnvironment).json'

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: Deploy IIS Website/App - $(siteDNS)\$(productName)
                  inputs:
                    WebSiteName: '$(siteDNS)'
                    VirtualApplication: '$(productName)'
                    Package: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    TakeAppOfflineFlag: true

  - stage: deploy_prod
    dependsOn: deploy_staging
    condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest')))
    variables:
      - template: ../variables/production.yml
      
    jobs:
      - deployment: DeployAPI
        environment:
          name: Production
          resourceName: VM-MICRO-PRD-01
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  displayName: Remove HTTPS Bindings 
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                      script: |
                        netsh http delete sslcert ipport=0.0.0.0:443
                        netsh http delete sslcert ipport=0.0.0.0:$(headlessPort)
                        setx ASPNETCORE_ENVIRONMENT $(rgEnvironment) /M

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: IIS Web App Create - $(siteDNS)
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(siteDNS)'
                    WebsitePhysicalPath: '%SystemDrive%\sites\$(siteDNS)'
                    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                    AddBinding: true
                    Bindings: '{"bindings":[{"protocol":"https","ipAddress":"All Unassigned","port":"$(headlessPort)","hostname":"","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"https","ipAddress":"All Unassigned","port":"443","hostname":"$(siteDNS)","sslThumbprint":"$(thumbprint)","sniFlag":false},{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"$(siteDNS)","sslThumbprint":"","sniFlag":false}]}'
                    CreateOrUpdateAppPoolForWebsite: true
                    ConfigureAuthenticationForWebsite: true
                    AnonymousAuthenticationForWebsite: true
                    WindowsAuthenticationForWebsite: false
                    AppPoolNameForWebsite: '$(siteDNS)'
                    DotNetVersionForWebsite: 'v4.0'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'SpecificUser'
                    AppPoolUsernameForWebsite: '$(netforumUser)'
                    AppPoolPasswordForWebsite: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: 'IIS App Pool Stop - $(siteDNS)-$(productName)'
                  condition: ${{ parameters.CreateIis }}
                  continueOnError: true
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StopAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'                    

                - task: IISWebAppManagementOnMachineGroup@0                
                  displayName: 'IIS App Pool and Site Create - $(siteDNS)-$(productName)'
                  condition: ${{ parameters.CreateIis }}
                  inputs:
                    IISDeploymentType: 'IISWebApplication'
                    ParentWebsiteNameForApplication: '$(siteDNS)'
                    VirtualPathForApplication: '/$(productName)'
                    PhysicalPathForApplication: '%SystemDrive%\sites\$(siteDNS)\$(productName)'
                    CreateOrUpdateAppPoolForApplication: true
                    AppPoolNameForApplication: '$(siteDNS)-$(productName)'
                    DotNetVersionForApplication: 'v4.0'
                    PipeLineModeForApplication: 'Integrated'
                    AppPoolIdentityForApplication: 'SpecificUser'
                    AppPoolUsernameForApplication: '$(netforumUser)'
                    AppPoolPasswordForApplication: '$(netforumPassword)'

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: 'IIS App Pool Start - $(siteDNS)-$(productName)'
                  condition: ${{ parameters.CreateIis }}
                  continueOnError: true
                  inputs:
                    IISDeploymentType: 'IISApplicationPool'
                    ActionIISApplicationPool: 'StartAppPool'
                    StartStopRecycleAppPoolName: '$(siteDNS)-$(productName)'

                - task: FileTransform@1
                  displayName: 'Variable transformation'
                  inputs:
                    folderPath: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    fileType: 'json'
                    targetFiles: 'appsettings.$(rgEnvironment).json'

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: Deploy IIS Website/App - $(siteDNS)\$(productName)
                  inputs:
                    WebSiteName: '$(siteDNS)'
                    VirtualApplication: '$(productName)'
                    Package: '$(artifactsPath)\$(artifactName)\$(archiveFile)'
                    TakeAppOfflineFlag: true