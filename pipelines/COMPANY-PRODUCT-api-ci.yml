trigger:
  batch: true
  branches:
    include:
    - '*'
    exclude:
    - 'main'
  paths:
    include:
    - src/Core/**
    - src/Infrastructure/**
    - src/Presentation/**
    - tests/**

pr:
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
 buildconfiguration: 'Release'
 solution: '**/MY_SOLUTION.sln'
 project: '**/Presentation.WebApi.csproj'
 test: '**/Application.Specs.Unit.csproj'
 nugetfilepath: '.nuget/NuGet.config'
 version: '7.x'

stages:
  - stage: development
    jobs:
      - job: build_src
        steps:
         -  task: UseDotNet@2
            displayName: UseSDKVersion 
            inputs:
             packageType: 'sdk'
             version: $(version)
             includePreviewVersions: true
         -  task: DotNetCoreCLI@2
            displayName: dotnetrestore
            inputs:
             command: 'restore'
             projects: '$(solution)'
             feedsToUse: 'config'
             nugetConfigPath: '$(nugetfilepath)'
         - task: DotNetCoreCLI@2
           displayName: dotnet build 
           inputs:
             command: 'build'
             projects: '$(project)'
             arguments: '--configuration $(buildconfiguration)'

      - job: Test_src
        dependsOn: build_src
        steps:
         - task: DotNetCoreCLI@2
           displayName: dotnet test
           inputs:
             command: 'test'
             projects: '$(test)'
             arguments: '--configuration $(buildConfiguration)'
             publishTestResults: true

      - job: Publish_src
        dependsOn: Test_src
        steps: 
        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '$(project)'
            arguments: '--configuration $(buildconfiguration) --output $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true
    
        - task: PublishBuildArtifacts@1
          displayName: Publishbuildartifacts
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'